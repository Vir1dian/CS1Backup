Attributes Legend: (Must have period after the numbers for parsing)
# Number 
& Type : 1-Conceptual 2-Debugging 3-Comparison 4-FIB 5-TOF
> Difficulty : 1-Easy 2-Moderate 3-Challenging
* Category : 
  (Can have multiple, must be separated by a comma with no space.)
  1-Introduction/Other 2-Making Decisions 3-Loops 4-Files 
  5-Binary/Hexadecimal 6-Functions 7-Arrays 8-Text Files
  9-C Strings/String 10-Structures 11-Binary Files
-----------------
Attributes: 
#1. 
&1. 
>1.
*2. 
Question: 
When is the following Boolean expression true (a and b are integers)?
(a < b) && !(b > a)
Answers:
A| Never true
B| a = b
C| a < b
D| a > b
Solution:
C

Attributes:
#2. 
&1. 
>3. 
*1,3.
Question:
Consider the following code segment:
int p = 5;
int q = 2;
int sum = 0;
while (p <= 8) {
  sum += p % q;
  p++;
  q++;
}
What is the value of sum after the code is executed?
Answers:
A| 1
B| 0
C| 13
D| 7
Solution:
D

Attributes:
#3. 
&1. 
>1. 
*1,2.
Question:
What is assigned to the variable x?
int x, y = 2, z = 4;
x = y++ == --z;
Answers:
A| 1
B| 0
C| 3
D| 4
Solution:
B

Attributes:
#4.
&1.
>3.
*1,2.
Question:
What will be printed by the program?
#include<iostream>
int main() {
  int a = 19;
  if (a / 2 < 9)
    a = --a % 10;
  else
    a++;
  a %= 7 / 3;
  cout << a++;
  return 0;
}
Answers:
A| 2
B| 0
C| 1
D| 5
Solution:
D

Attributes:
#5.
&1.
>1.
*1.
Question:
What is the correct syntax to output "Hello World" in C++?
Answers:
A| cout << "Hello World";
B| echo "Hello World";
C| console.log("Hello World");
D| print("Hello World");
Solution:
A


Attributes:
#6.
&1.
>1.
*2.
Question:
What is another way to write this boolean expression, assuming that numbers a, b, and c are integers?
(a >= b && b >= c && a <= c)
Answers:
A| (a >= b && a <= c)
B| (b <= a && b >= c)
C| (a == b && a == c)
D| !(b >= a || a == c)
Solution:
C


Attributes:
#7.
&1.
>2.
*2,6.
Question:
What is displayed by the following code?
#include <iostream>
using namespace std;
bool cond1() {
  cout << "1";
  return true;
}
bool cond2() {
  cout << "2";
  return false;
}
int main() {
  bool mybool = cond2() && cond1();
  return 0;
}
Answers:
A| 12
B| 21
C| 1
D| 2
Solution:
D


Attributes:
#8.
&2.
>1.
*1.
Question:
Are there any fatal errors in this program, if any?:
#include<iostream>
int main() {
  float b;
  b = int('a') / 7;
  cout << setprecision(5) << fixed << b;
  return 0;
}
Answers:
A| Char literal ‘a’ cannot be converted into an int
B| The code is performing integer division, one of the values must be typecast into a float
C| The setprecision function is not recognized because it is not part of the iostream library
D| There are no errors
Solution:
C


Attributes:
#9.
&2.
>1.
*6.
Question:
Are there any fatal errors in this function definition, if any?:
void total(int value1, value2, value3) {
	cout << value1 + value2;
}
Answers:
A| A return value is missing
B| Not all parameters are defined by a data type
C| The parameter value3 is unused
D| There are no errors
Solution:
B


Attributes:
#10.
&2.
>2.
*1.
Question:
Are there any fatal errors in this program, if any?:
#include<iostream>
#include<string>
int main() {
  string fullname, age;
  getline(cin, fullname, \n);
  cin >> age;
  return 0;
}
Answers:
A| cin is not followed by cin.ignore()
B| The variable age must be declared as an integer
C| The getline function is not recognized because it is not part of the string library
D| There are no errors
Solution:
D


Attributes:
#11.
&2.
>2.
*1,3.
Question:
Which of the following choices successfully fixes the infinite loop caused by this code segment:
int a = 1, b = 4;
while (b % a != b / a) {
  a++;
  b++;
}
Answers:
A| Replace b = 4 initialization with b = 5
B| Replace b++ with b += 3
C| Replace a = 1 initialization with a = 5
D| Replace a++ with a += 2
Solution:
D


Attributes:
#12.
&2.
>3.
*3.
Question:
Which of the following changes in Code I will result in Code I having the same output as Code II?
// I. 
// You are debugging this segment
int i = 0;
for ( ; i < 10 ; i++) {
  i++;
  cout << i;
}
// II.
int i;
for (i = 1; i < 10; i+=2) {
  cout << i - 1;
}
Answers:
A| Remove the extra i++ statement inside the for loop
B| Replace cout << i with cout << --i
C| Replace the extra i++ statement inside the for loop with i+=2
D| Move the extra i++ statement inside the for loop below cout << i
Solution:
D


Attributes:
#13.
&2.
>2.
*6.
Question:
Are there errors in this program, if any?:
#include <iostream>
using namespace std;
void myfunc(int &x = 25);
int main() {
  int a = 5;
  myfunc(a);
  return 0;
}
void myfunc(int &x) {
  cout << ++x;
}
Answers:
A| The myfunc call is using the wrong arguments
B| The myfunc prototype has a default value
C| The myfunc function has no return value
D| myfunc should not be a void function
Solution:
B


Attributes:
#14.
&2.
>1.
*3.
Question:
What is preventing this code from displaying the number 1?
int x;
if (x < 10);
  cout << ++x;
Answers:
A| Variable x is not initialized.
B| The if statement is followed by a semicolon
C| Cout is used with an accumulator for x
D| The condition in the if statement is formatted wrong
Solution:
A


Attributes:
#15.
&3.
>1.
*1,3.
Question:
Which of the following code segments results in an infinite loop?
// I.
int x = 1;
while (x < 10) {
  x%=2;
  x++;
}
// II.
int x = 1;
while (x < 10) 
  x++;
// III.
int x = 1;
while (x > 10) {
  x--;
  x++;
}
// IV.
int x = 1;
while (true) {
  if (x == 10)
    break;
  x++;
}
Answers:
A| I
B| II
C| III
D| IV
Solution:
A


Attributes:
#16.
&3.
>3.
*2.
Question:
Which of the following is true about the two code segments:
// I.
int x;
cin >> x;
switch (x) {
  case 1:
    cout << 1;
    break;
  case 2:
    cout << 2;
  case 3:
    cout << 3;
  case 4:
    cout << 4;
    break;
  default:
    cout << 0;
}
// II.
int x;
cin >> x;
if (x == 1) {
  cout << 1;
} else if (x == 2) {
  cout << 2;
  cout << 3;
  cout << 4;
} else if (x == 3) {
  cout << 3;
  cout << 4;
} else if (x == 4) {
  cout << 4;
} else {
  cout << 0;
}
Answers:
A| For inputs with values outside of the range 1–4, Code I will print 0 while Code II prints nothing
B| Inputting 3 will print out 3 for Code I, but not for Code II
C| Inputting 2 will print out 234 for Code II, but not for Code I
D| Both code segments displays the same number/s
Solution:
D


Attributes:
#17.
&3.
>3.
*1,6.
Question:
A chemistry student wants to convert temperature from Fahrenheit to Celcius using a function. 
The formula for conversion is C = (5/9)(F – 32). Which of the following functions accurately performs this conversion?
// I.
float x(float f) {
  f -= 32;
  f *= 5.0/9;
  return f;
}
// II.
float x(float f) {
  return (f - 32) * (5/9);
}
// III.
float x(float f) {
  f *= 5;
  f /= 9.0;
  return f - 32;
}
Answers:
A| I
B| I, II
C| I, III
D| II, III
Solution:
A


Attributes:
#18.
&3.
>2.
*1,3.
Question:
What is true about the three code segments:
// I.
int a = 0;
while (a < 10)
  cout << ++a;
// II.
int a = 0;
while (a < 10)
  cout << a++;
// III.
int a = 0;
for (; a < 10; a++)
  cout << a;
Answers:
A| I, II, and III displays 0123456789
B| I and II displays 0123456789 while III displays 12345678910
C| I and III displays 0123456789 while II displays 12345678910
D| II and III displays 0123456789 while I displays 12345678910
Solution:
D


Attributes:
#19.
&3.
>3.
*2.
Question:
// I.
if (a >= b) {
  cout << a;
  if (a < b)
    cout << a;
  else 
    cout << b;
}
// II.
if (a > b)
  cout << a;
else if (a < b)
  cout << b;
else
  cout << a;
cout b;
// III.
if (a < b)
  cout << a;
if (a > b)
  cout << a;
if (a == b)
  cout << a;
else
  cout << b;
Answers:
A| a is only greater than b
B| a is only less than b
C| a is greater than or equal to b
D| a is less than or equal to b
Solution:
A


Attributes:
#20.
&3.
>2.
*6.
Question:
Assume that the mystery function swaps the values of its two parameters. 
What will be the output of the two code segments?
// I.
void mystery(string&, string);
int main() { 
  string o = "orange", b = "blue";
  mystery(o, b);
  cout << o << b << endl;
  return 0; 
}
// II.
void mystery(string, string&);
int main() { 
  string o = "orange", b = "blue";
  mystery(o, b);
  cout << o << b << endl;
  return 0; 
}
Answers:
A| I. blueorange II. blueorange
B| I. blueblue II. orangeorange
C| I. blueblue II.blueblue
D| I. orangeorange II. orangeorange
Solution:
B


Attributes:
#21.
&4.
>1.
*1.
Question:
The double data type uses ___ bytes in memory.
Answers:

Solution:
8


Attributes:
#22.
&4.
>2.
*3.
Question:
This loop will run ___ times.  6  
for (int i = 10; i >= 5; i--) {
  cout << "Hello" << endl;
}
Answers:

Solution:
6


Attributes:
#23.
&4.
>2.
*1,2.
Question:
This boolean condition requires the >=, !=, or ___ operator to be true.
(10 % 9 ___ 10 / 9)
Answers:

Solution:
>


Attributes:
#24.
&4.
>1.
*2.
Question:
The >=, <=, or ___ should fill the condition such that the code segment would display 5?
cout << sizeof(char) ___ 1 ? 4 : 5;
Answers:

Solution:
==


Attributes:
#25.
&4.
>3.
*1,3.
Question:
The string "rep" will be displayed ___ times.
int a = 13;
do {
  cout << "rep" << endl;
} while (a++ < 25);
Answers:

Solution:
13


Attributes:
#26.
&4.
>1.
*6,7.
Question:
Consider the following code segment.
  string name = "Blueberry Pie";
  string other_name = name.substr(4, 5);
The value of string other_name will be ___. 
Answers:

Solution:
berry


Attributes:
#27.
&4.
>2.
*5.
Question:
***d in binary is ___.
Answers:
!This question uses randomized values.
Solution:



Attributes:
#28.
&4.
>2.
*5.
Question:
***b in decimal is ___.
Answers:
!This question uses randomized values.
Solution:



Attributes:
#29.
&4.
>3.
*5.
Question:
***d in hexadecimal is ___.
Answers:
!This question uses randomized values.
Solution:



Attributes:
#30.
&4.
>3.
*5.
Question:
***h in decimal is ___.
Answers:
!This question uses randomized values.
Solution:



Attributes:
#31.
&4.
>1.
*4.
Question:
The ___ library is needed to use the following 
data types: ifstream, ofstream, fstream.
Answers:

Solution:
fstream


Attributes:
#32.
&4.
>1.
*6.
Question:
In the following line of code, x is a/an ____ parameter.
foo(x);
Answers:

Solution:
actual


Attributes:
#33.
&5.
>2.
*2.
Question:
This code segment causes an error.
string a = "hello world";
if (a.length() < 5 && a % 2 == 0)
  cout << a;
Answers:
TRUE or FALSE
Solution:
TRUE


Attributes:
#34.
&5.
>3.
*1,3,6.
Question:
This function is equivalent to using the modulo operator % such that a % b = c
int mod(int a, int b) {
  int c = a;
  for (int i = 0; i < a/b; i++)
    c -= b;
return c;
}
Answers:
TRUE or FALSE
Solution:
TRUE


Attributes:
#35.
&5.
>3.
*2,6.
Question:
The following code will return "12".
#include <iostream>
using namespace std;
bool cond1() {
  cout << "1";
  return true;
}
bool cond2() {
  cout << "2";
  return false;
}
int main() {
  bool mybool = cond1() || cond2();
  return 0;
}
Answers:
TRUE or FALSE
Solution:
FALSE



Attributes:
#36.
&5.
>2.
*2.
Question:
In the following code, the value of the boolean mybool is true:
int a = 5, b = 3;
bool mybool = a > b ? a < b : a > b;
Answers:
TRUE or FALSE
Solution:
FALSE


Attributes:
#37.
&5.
>1.
*3.
Question:
The following for loop will result in an infinite loop.
for (int i = 100; i >= 0; i++)
Answers:
TRUE or FALSE
Solution:
TRUE


Attributes:
#38.
&5.
>1.
*4.
Question:
The following code results in the contents of myfile.txt being overwritten.
ofstream f;
f.open("myfile.txt");
f << "ABC" << endl; 
f.close();
Answers:
TRUE or FALSE
Solution:
TRUE


Attributes:
#39.
&.
>.
*.
Question:

Answers:

Solution:



Attributes:
#40.
&.
>.
*.
Question:

Answers:

Solution:



Attributes:
#41.
&.
>.
*.
Question:

Answers:

Solution:



Attributes:
#42.
&.
>.
*.
Question:

Answers:

Solution:



Attributes:
#43.
&.
>.
*.
Question:

Answers:

Solution:



Attributes:
#44.
&.
>.
*.
Question:

Answers:

Solution:



Attributes:
#45.
&.
>.
*.
Question:

Answers:

Solution:



Attributes:
#46.
&.
>.
*.
Question:

Answers:

Solution:



Attributes:
#47.
&.
>.
*.
Question:

Answers:

Solution:



Attributes:
#48.
&.
>.
*.
Question:

Answers:

Solution:



Attributes:
#49.
&.
>.
*.
Question:

Answers:

Solution:



Attributes:
#50.
&.
>.
*.
Question:

Answers:

Solution: